#
# (c) Copyright IBM Corporation 2016.
# (c) Copyright HCL Technologies Ltd. 2020.
# LICENSE: Apache License, Version 2.0 https://www.apache.org/licenses/LICENSE-2.0
#
# NLS_MESSAGEFORMAT_VAR
# NLS_ENCODING=UNICODE

section.asoc=Scan Configuration
label.cred=Credentials
desc.cred=Specifies the credentials to use for running a scan. Add credentials using the Shared Credentials page.
label.appid=Application ID
desc.appid=The AppScan on Cloud application that this scan will be associated with. Invoke GET/api/V2/Apps <a href=https://cloud.appscan.com/swagger/ui/index target=_blank> here </a> to fetch the Application ID.
label.scanName=Scan Name
desc.scanName=An optional name for the scan. This name is used to differentiate results on the Build page.
label.suspend=Suspend job until security analysis completes
desc.suspend=Suspend the job until the security analysis results are available.
label.test.type=Test Type
desc.testType=The type of test to run.
label.target=Starting URL
desc.target=The URL where the scan will start exploring the site.
label.open.source.only=Open Source Only
desc.openSourceOnly=To run the static analysis with open source only option , the user must have this option enabled in the cloud subscription.
label.email.notification=Email Notification
desc.emailNotification=Send the user an email when analysis is complete.

label.target.help=The URL where the scan will start exploring the site.

dyn.label.scan.type=Scan Type
desc.dynScanType=Defines whether the site is Staging or Production.
dyn.label.test.optimization=Test Optimization
desc.dyn.testOptimization=You can reduce scan time by choosing a balance between speed and issue coverage.<a href=https://help.hcltechsw.com/appscan/ASoC/dast_test_optimization.html target=_blank> Read more about Test Optimization</a> 
dyn.label.login.user=Login User
desc.dynLoginUser=Provide a valid username for Application Security on Cloud to use to log in when scanning your app.
dyn.label.login.password=Login Password
desc.dynLoginPassword=Provide the password for the given username.
dyn.label.third.credential=Third Credential
dyn.thirdCred=If your application login process requires a third credential, add it here.
dyn.label.presence=Presence
desc.dynPresence=For sites not available on the internet, provide the ID of the AppScan Presence that can be used for the scan.
dyn.label.scan.file=Scan File
desc.dynScanFile=The path to a scan template file (.scan or .scant).

err.selectedCred=You do not have any shared credentials configured
err.appId=The application ID is required
err.selectedScanType=Please Select type of ASoC Scan
err.invalidScanType=Scan Type provided is Invalid: {0}
err.emptyScanType=Scan Type is Empty
err.target=Target URL is Required
err.custom.target.path=Provided Target File is inaccessible or doesn't exist
err.selectedFailBuild=Please Select Fail Build Criteria

section.fail=Build Failure Criteria
section.fail.configure=Configure Build Failure Criteria
fail.build.non.compliance=Fail build for non-compliance with application policies
fail.build.on.severity=Fail build if one of the following conditions apply:
desc.failConfigure=Configure the conditions that will cause the build to fail based on the results of the security scan.
desc.section.fail=To ignore a particular severity, leave its field blank.
label.high=High security issues greater than:
label.medium=Medium security issues greater than:
label.low=Low security issues greater than:
label.total=Total security issues greater than:
err.nan=The value is not a valid number

err.no.artifacts=There are no build artifacts configured. A scan will not be done.
err.artifacts.unavailable=No Artifacts are available to perform Scan. Scan will not be scheduled. 
copy.artifact=Copying artifact ''{0}'' to {1}
util.info={0} selected. Full path is: {1}
publish.artifact=Publishing an artifact: {0}

generate.irx=Generating IRX file {0} in directory {1}
generate.irx.failed=Failed to generate IRX file. Exit code {0}

submit.irx=Submitting IRX file to ASoC service
submit.irx.failed=Failed to submit IRX file to the service. Exit code {0}
submit.irx.failed2=Failed to submit IRX file to the service.

static.scan.speed.simple=Simple - A <b>simple</b> scan performs a surface-level analysis of your files to identify the most pressing issues for remediation. It takes the least amount of time to complete.
static.scan.speed.balanced=Balanced - A <b>balanced</b> scan provides a medium level of detail on the analysis and identification of security issues, and takes a bit more time to complete than the <b>'Simple'</b> scan.
static.scan.speed.deep=Deep - A <b>deep</b> scan performs a more complete analysis of your files to identify vulnerabilities, and usually takes longer to complete.
static.scan.speed.thorough=Thorough - A <b>thorough</b> scan performs a comprehensive analysis to identify the most comprehensive list of vulnerabilities and will take the longest time to complete.
section.scan.speed=Select Scan Speed
dec.scanSpeed=Options to determine the scan speed. Deep scan is performed by default.

scan.schedule.dynamic=Scheduling Dynamic Scan
scan.schedule.static=Scheduling Static Scan
scan.schedule.success=Scan scheduled Successfully. Scan Id: {0}
err.scan.schedule=Exception in Scheduling Scan: {0}
err.working.dir.creation=Exception in Creating Working Directory: {0}
asoc.homepage.url=ASoC Homepage: {0}

status.check=Checking status of the scan
status.check.failed=Failed to retrieve status of the scan.
status.check.is=Status of the scan is: {0}
scan.failed=The scan failed to run on the service

download.result=Downloading the scan results
download.result.failed=Failed to download the scan results. Exit code {0}
result.artifact=Scan Results
irx.file=IRX File
scan.error=Scan could not Complete Successfully. {0}

maxTotal.none=::::: No build failure criterion set for total severity findings :::::
maxTotal.fail=::::: {0} total severity findings found, exceeding the defined limit of {1}. FAILED! :::::
maxTotal.pass=::::: {0} total severity findings found, which is within the defined limit of {1}. PASSED! :::::

maxHigh.none=::::: No build failure criterion set for high severity findings :::::
maxHigh.fail=::::: {0} high severity findings found, exceeding the defined limit of {1}. FAILED! :::::
maxHigh.pass=::::: {0} high severity findings found, which is within the defined limit of {1}. PASSED! :::::

maxMedium.none=::::: No build failure criterion set for medium severity findings :::::
maxMedium.fail=::::: {0} medium severity findings found, exceeding the defined limit of {1}. FAILED! :::::
maxMedium.pass=::::: {0} medium severity findings found, which is within the defined limit of {1}. PASSED! :::::

maxLow.none=::::: No build failure criterion set for low severity findings :::::
maxLow.fail=::::: {0} low severity findings found, exceeding the defined limit of {1}. FAILED! :::::
maxLow.pass=::::: {0} low severity findings found, which is within the defined limit of {1}. PASSED! :::::

failBuildNonCompliance.none=::::: No build failure criterion set for non compliant issues with respect to the policies associated with the selected application :::::
failBuildNonCompliance.fail=::::: The scan result contains non compliant issues with respect to the policies associated with the selected application. FAILED!  :::::
failBuildNonCompliance.pass=::::: The scan result does not contain any non compliant issues with respect to the policies associated with the selected application. FAILED!  :::::